import { notFound } from "next/navigation";

import type { Metadata } from "next";

import { Languages, languages } from "@/shared/i18n/types";

import { PreHeader } from "./_layouts/PreHeader";
import { Header } from "./_layouts/Header";

import { gql } from "@/graphql/client";

import "@/shared/assets/styles/index.css";
import { SubFooter } from "./_layouts/SubFooter";
import { Footer } from "./_layouts/Footer";
import { Loader } from "@/shared/ui";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: { locale: Languages };
}) {
  if (!languages.includes(params.locale as Languages)) notFound();

  const { preHeader } = await gql.GetPreHeader({
    locale: params.locale,
  });

  const { linkLists } = await gql.GetHeaderLinkList({
    locale: params.locale,
  });

  const { layoutSubFooters } = await gql.GetLayoutSubFooters({
    locale: params.locale,
  });

  const { layoutFooter } = await gql.GetLayoutFooter({
    locale: params.locale,
  });

  const { i18NLocales } = await gql.GetLocale();

  const localeCodes = i18NLocales.data.map(
    (el) => el.attributes.code
  ) as Languages[];

  return (
    <>
      {preHeader.data && (
        <PreHeader preHeader={preHeader.data} localeCodes={localeCodes} />
      )}
      {linkLists.data && <Header linkLists={linkLists.data} />}

      <main>{children}</main>

      {layoutSubFooters.data && <SubFooter data={layoutSubFooters.data} />}

      {layoutFooter.data && <Footer data={layoutFooter.data.attributes} />}
    </>
  );
}
